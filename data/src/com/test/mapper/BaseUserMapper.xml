<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.mapper.BaseUserMapper">

	<sql id="sql_filed_user">user.id AS user_temp_id,user.name,user.password,user.sex,user.create_time AS user_temp_create_time,user.delete_flag AS user_temp_delete_flag,user.update_time AS user_temp_update_time</sql>
	<sql id="sql_filed_reply">reply.id AS reply_temp_id,reply.topic_id,reply.user_id AS reply_temp_user_id,reply.data AS reply_temp_data,reply.create_time AS reply_temp_create_time,reply.delete_flag AS reply_temp_delete_flag</sql>
	<sql id="sql_filed_topic">topic.id AS topic_temp_id,topic.title,topic.data AS topic_temp_data,topic.user_id AS topic_temp_user_id,topic.create_time AS topic_temp_create_time,topic.update_time AS topic_temp_update_time,topic.delete_flag AS topic_temp_delete_flag,topic.max_count</sql>

	<resultMap id="resultUser" type="com.test.entity.User">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="password" property="password"/>
		<result column="sex" property="sex"/>
		<result column="create_time" property="createTime"/>
		<result column="delete_flag" property="deleteFlag"/>
		<result column="update_time" property="updateTime"/>
	</resultMap>

	<resultMap id="resultUserOneToManyReply" type="com.test.entity.User">
		<id column="user_temp_id" property="id"/>
		<result column="name" property="name"/>
		<result column="password" property="password"/>
		<result column="sex" property="sex"/>
		<result column="user_temp_create_time" property="createTime"/>
		<result column="user_temp_delete_flag" property="deleteFlag"/>
		<result column="user_temp_update_time" property="updateTime"/>
		<collection property="listReply" ofType="com.test.entity.Reply">
			<id column="reply_temp_id" property="id"/>
			<result column="topic_id" property="topicId"/>
			<result column="reply_temp_user_id" property="userId"/>
			<result column="reply_temp_data" property="data"/>
			<result column="reply_temp_create_time" property="createTime"/>
			<result column="reply_temp_delete_flag" property="deleteFlag"/>
		</collection>
	</resultMap>

	<resultMap id="resultReply" type="com.test.entity.Reply">
		<id column="id" property="id"/>
		<result column="topic_id" property="topicId"/>
		<result column="user_id" property="userId"/>
		<result column="data" property="data"/>
		<result column="create_time" property="createTime"/>
		<result column="delete_flag" property="deleteFlag"/>
	</resultMap>

	<resultMap id="resultUserOneToManyTopic" type="com.test.entity.User">
		<id column="user_temp_id" property="id"/>
		<result column="name" property="name"/>
		<result column="password" property="password"/>
		<result column="sex" property="sex"/>
		<result column="user_temp_create_time" property="createTime"/>
		<result column="user_temp_delete_flag" property="deleteFlag"/>
		<result column="user_temp_update_time" property="updateTime"/>
		<collection property="listTopic" ofType="com.test.entity.Topic">
			<id column="topic_temp_id" property="id"/>
			<result column="title" property="title"/>
			<result column="topic_temp_data" property="data"/>
			<result column="topic_temp_user_id" property="userId"/>
			<result column="topic_temp_create_time" property="createTime"/>
			<result column="topic_temp_update_time" property="updateTime"/>
			<result column="topic_temp_delete_flag" property="deleteFlag"/>
			<result column="max_count" property="maxCount"/>
		</collection>
	</resultMap>

	<resultMap id="resultTopic" type="com.test.entity.Topic">
		<id column="id" property="id"/>
		<result column="title" property="title"/>
		<result column="data" property="data"/>
		<result column="user_id" property="userId"/>
		<result column="create_time" property="createTime"/>
		<result column="update_time" property="updateTime"/>
		<result column="delete_flag" property="deleteFlag"/>
		<result column="max_count" property="maxCount"/>
	</resultMap>


	<insert id="insertUser" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		INSERT INTO user (
		<trim prefix="" suffixOverrides=",">
			<if test="id!=null">id,</if>
			<if test="name!=null">name,</if>
			<if test="password!=null">password,</if>
			<if test="sex!=null">sex,</if>
			<if test="createTime!=null">create_time,</if>
			<if test="deleteFlag!=null">delete_flag,</if>
			<if test="updateTime!=null">update_time</if>
		</trim>
		) VALUES (
		<trim prefix="" suffixOverrides=",">
			<if test="id!=null">#{id},</if>
			<if test="name!=null">#{name},</if>
			<if test="password!=null">#{password},</if>
			<if test="sex!=null">#{sex},</if>
			<if test="createTime!=null">#{createTime},</if>
			<if test="deleteFlag!=null">#{deleteFlag},</if>
			<if test="updateTime!=null">#{updateTime}</if>
		</trim>
		)
	</insert>

	<insert id="insertUserList" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		INSERT INTO user (
			id,name,password,sex,create_time,delete_flag,update_time
		) VALUES
		<foreach collection="list" index="index" item="obj" separator=",">
			(
				#{obj.id},
				#{obj.name},
				#{obj.password},
				#{obj.sex},
				#{obj.createTime},
				#{obj.deleteFlag},
				#{obj.updateTime}
			)
		</foreach>
	</insert>

	<insert id="insertOrUpdateUserByUnique" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		INSERT INTO user (
		<trim prefix="" suffixOverrides=",">
			<if test="id!=null">id,</if>
			<if test="name!=null">name,</if>
			<if test="password!=null">password,</if>
			<if test="sex!=null">sex,</if>
			<if test="createTime!=null">create_time,</if>
			<if test="deleteFlag!=null">delete_flag,</if>
			<if test="updateTime!=null">update_time</if>
		</trim>
		) VALUE (
		<trim prefix="" suffixOverrides=",">
			<if test="id!=null">#{id},</if>
			<if test="name!=null">#{name},</if>
			<if test="password!=null">#{password},</if>
			<if test="sex!=null">#{sex},</if>
			<if test="createTime!=null">#{createTime},</if>
			<if test="deleteFlag!=null">#{deleteFlag},</if>
			<if test="updateTime!=null">#{updateTime}</if>
		</trim>
		) ON DUPLICATE KEY UPDATE 
		<trim prefix="" suffixOverrides=",">
			<if test="name!=null">name = #{name},</if>
			<if test="password!=null">password = #{password},</if>
			<if test="sex!=null">sex = #{sex},</if>
			<if test="createTime!=null">create_time = #{createTime},</if>
			<if test="deleteFlag!=null">delete_flag = #{deleteFlag},</if>
			<if test="updateTime!=null">update_time = #{updateTime}</if>
		</trim>
	</insert>

	<insert id="insertOrUpdateUserByWhere">
		<selectKey keyProperty="conditionUser.id" keyColumn="id" resultType="int" order="BEFORE">
			SELECT IFNULL ((
				SELECT id FROM user
				<where>
					<if test="conditionUser!=null">
						<if test="conditionUser.id!=null">AND id = #{conditionUser.id}</if>
						<if test="conditionUser.name!=null">AND name = #{conditionUser.name}</if>
						<if test="conditionUser.password!=null">AND password = #{conditionUser.password}</if>
						<if test="conditionUser.sex!=null">AND sex = #{conditionUser.sex}</if>
						<if test="conditionUser.createTime!=null">AND DATE(create_time) = DATE(#{conditionUser.createTime})</if>
						<if test="conditionUser.deleteFlag!=null">AND delete_flag = #{conditionUser.deleteFlag}</if>
						<if test="conditionUser.updateTime!=null">AND DATE(update_time) = DATE(#{conditionUser.updateTime})</if>
					</if>
				</where>
			),NULL)
		</selectKey>
		<if test="conditionUser.id==null">
			INSERT INTO user (
			<trim prefix="" suffixOverrides=",">
				<if test="saveUser.id!=null">id,</if>
				<if test="saveUser.name!=null">name,</if>
				<if test="saveUser.password!=null">password,</if>
				<if test="saveUser.sex!=null">sex,</if>
				<if test="saveUser.createTime!=null">create_time,</if>
				<if test="saveUser.deleteFlag!=null">delete_flag,</if>
				<if test="saveUser.updateTime!=null">update_time</if>
			</trim>
			) VALUES (
			<trim prefix="" suffixOverrides=",">
				<if test="saveUser.id!=null">#{saveUser.id},</if>
				<if test="saveUser.name!=null">#{saveUser.name},</if>
				<if test="saveUser.password!=null">#{saveUser.password},</if>
				<if test="saveUser.sex!=null">#{saveUser.sex},</if>
				<if test="saveUser.createTime!=null">#{saveUser.createTime},</if>
				<if test="saveUser.deleteFlag!=null">#{saveUser.deleteFlag},</if>
				<if test="saveUser.updateTime!=null">#{saveUser.updateTime}</if>
			</trim>
		)
		</if>
		<if test="conditionUser.id!=null">
			UPDATE user
			<set>
				<if test="saveUser.name!=null">name = #{saveUser.name},</if>
				<if test="saveUser.password!=null">password = #{saveUser.password},</if>
				<if test="saveUser.sex!=null">sex = #{saveUser.sex},</if>
				<if test="saveUser.createTime!=null">create_time = #{saveUser.createTime},</if>
				<if test="saveUser.deleteFlag!=null">delete_flag = #{saveUser.deleteFlag},</if>
				<if test="saveUser.updateTime!=null">update_time = #{saveUser.updateTime}</if>
			</set>
			WHERE id = #{conditionUser.id}
		</if>
	</insert>

	<insert id="insertUserByWhereOnlySave" useGeneratedKeys="true" keyProperty="saveUser.id" keyColumn="id">
		INSERT INTO user (
		<trim prefix="" suffixOverrides=",">
			<if test="saveUser.id!=null">id,</if>
			<if test="saveUser.name!=null">name,</if>
			<if test="saveUser.password!=null">password,</if>
			<if test="saveUser.sex!=null">sex,</if>
			<if test="saveUser.createTime!=null">create_time,</if>
			<if test="saveUser.deleteFlag!=null">delete_flag,</if>
			<if test="saveUser.updateTime!=null">update_time</if>
		</trim>
		) SELECT 
		<trim prefix="" suffixOverrides=",">
			<if test="saveUser.id!=null">#{saveUser.id},</if>
			<if test="saveUser.name!=null">#{saveUser.name},</if>
			<if test="saveUser.password!=null">#{saveUser.password},</if>
			<if test="saveUser.sex!=null">#{saveUser.sex},</if>
			<if test="saveUser.createTime!=null">#{saveUser.createTime},</if>
			<if test="saveUser.deleteFlag!=null">#{saveUser.deleteFlag},</if>
			<if test="saveUser.updateTime!=null">#{saveUser.updateTime}</if>
		</trim>
		FROM DUAL WHERE NOT EXISTS (
			SELECT id FROM user
			<where>
				<if test="conditionUser!=null">
					<if test="conditionUser.id!=null">AND id = #{conditionUser.id}</if>
					<if test="conditionUser.name!=null">AND name = #{conditionUser.name}</if>
					<if test="conditionUser.password!=null">AND password = #{conditionUser.password}</if>
					<if test="conditionUser.sex!=null">AND sex = #{conditionUser.sex}</if>
					<if test="conditionUser.createTime!=null">AND DATE(create_time) = DATE(#{conditionUser.createTime})</if>
					<if test="conditionUser.deleteFlag!=null">AND delete_flag = #{conditionUser.deleteFlag}</if>
					<if test="conditionUser.updateTime!=null">AND DATE(update_time) = DATE(#{conditionUser.updateTime})</if>
				</if>
			</where>
		)
	</insert>

	<delete id="deleteUserById">
		DELETE FROM user WHERE id = #{id}
	</delete>

	<delete id="deleteUserInId">
		DELETE FROM user WHERE id IN
			<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>
	</delete>

	<delete id="deleteUserByIdAndWhere">
		DELETE FROM user
		<where>
			id = #{id}
			<if test="user!=null">
				<if test="user.id!=null">AND id = #{user.id}</if>
				<if test="user.name!=null">AND name = #{user.name}</if>
				<if test="user.password!=null">AND password = #{user.password}</if>
				<if test="user.sex!=null">AND sex = #{user.sex}</if>
				<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
				<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
				<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
			</if>
		</where>
	</delete>

	<delete id="deleteUser">
		DELETE FROM user
		<where>
			<if test="user!=null">
				<if test="user.id!=null">AND id = #{user.id}</if>
				<if test="user.name!=null">AND name = #{user.name}</if>
				<if test="user.password!=null">AND password = #{user.password}</if>
				<if test="user.sex!=null">AND sex = #{user.sex}</if>
				<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
				<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
				<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
			</if>
		</where>
	</delete>

	<update id="falseDeleteUserById">
		UPDATE user SET delete_flag = 1 , update_time = NOW() WHERE id = #{id}
	</update>

	<update id="updateUserById">
		UPDATE user
		<set>
			<if test="name!=null">name = #{name},</if>
			<if test="password!=null">password = #{password},</if>
			<if test="sex!=null">sex = #{sex},</if>
			<if test="createTime!=null">create_time = #{createTime},</if>
			<if test="deleteFlag!=null">delete_flag = #{deleteFlag},</if>
			<if test="updateTime!=null">update_time = #{updateTime}</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="updateUserByNotRepeatWhere">
		UPDATE user
		<set>
			<if test="saveUser.name!=null">name = #{saveUser.name},</if>
			<if test="saveUser.password!=null">password = #{saveUser.password},</if>
			<if test="saveUser.sex!=null">sex = #{saveUser.sex},</if>
			<if test="saveUser.createTime!=null">create_time = #{saveUser.createTime},</if>
			<if test="saveUser.deleteFlag!=null">delete_flag = #{saveUser.deleteFlag},</if>
			<if test="saveUser.updateTime!=null">update_time = #{saveUser.updateTime}</if>
		</set>
		WHERE id = #{saveUser.id}
		<if test="conditionUser!=null and (conditionUser.id!=null OR conditionUser.name!=null OR conditionUser.password!=null OR conditionUser.sex!=null OR conditionUser.createTime!=null OR conditionUser.deleteFlag!=null OR conditionUser.updateTime!=null)">
			AND NOT EXISTS (
				SELECT id FROM (SELECT * FROM user ) AS t 
				<where>
					<if test="conditionUser!=null">
						<if test="conditionUser.id!=null">AND t.id = #{conditionUser.id}</if>
						<if test="conditionUser.name!=null">AND t.name = #{conditionUser.name}</if>
						<if test="conditionUser.password!=null">AND t.password = #{conditionUser.password}</if>
						<if test="conditionUser.sex!=null">AND t.sex = #{conditionUser.sex}</if>
						<if test="conditionUser.createTime!=null">AND DATE(t.create_time) = DATE(#{conditionUser.createTime})</if>
						<if test="conditionUser.deleteFlag!=null">AND t.delete_flag = #{conditionUser.deleteFlag}</if>
						<if test="conditionUser.updateTime!=null">AND DATE(t.update_time) = DATE(#{conditionUser.updateTime})</if>
					</if>
				</where>
			)
		</if>
	</update>

	<update id="updateUserByIdAndWhere">
		UPDATE user
		<set>
			<if test="saveUser.name!=null">name = #{saveUser.name},</if>
			<if test="saveUser.password!=null">password = #{saveUser.password},</if>
			<if test="saveUser.sex!=null">sex = #{saveUser.sex},</if>
			<if test="saveUser.createTime!=null">create_time = #{saveUser.createTime},</if>
			<if test="saveUser.deleteFlag!=null">delete_flag = #{saveUser.deleteFlag},</if>
			<if test="saveUser.updateTime!=null">update_time = #{saveUser.updateTime}</if>
		</set>
		<where>
			id = #{saveUser.id}
			<if test="conditionUser!=null">
				<if test="conditionUser.id!=null">AND id = #{conditionUser.id}</if>
				<if test="conditionUser.name!=null">AND name = #{conditionUser.name}</if>
				<if test="conditionUser.password!=null">AND password = #{conditionUser.password}</if>
				<if test="conditionUser.sex!=null">AND sex = #{conditionUser.sex}</if>
				<if test="conditionUser.createTime!=null">AND DATE(create_time) = DATE(#{conditionUser.createTime})</if>
				<if test="conditionUser.deleteFlag!=null">AND delete_flag = #{conditionUser.deleteFlag}</if>
				<if test="conditionUser.updateTime!=null">AND DATE(update_time) = DATE(#{conditionUser.updateTime})</if>
			</if>
		</where>
	</update>

	<update id="updateUser">
		UPDATE user
		<set>
			<if test="saveUser.name!=null">name = #{saveUser.name},</if>
			<if test="saveUser.password!=null">password = #{saveUser.password},</if>
			<if test="saveUser.sex!=null">sex = #{saveUser.sex},</if>
			<if test="saveUser.createTime!=null">create_time = #{saveUser.createTime},</if>
			<if test="saveUser.deleteFlag!=null">delete_flag = #{saveUser.deleteFlag},</if>
			<if test="saveUser.updateTime!=null">update_time = #{saveUser.updateTime}</if>
		</set>
		<where>
			<if test="saveUser.id!=null">
				AND id = #{saveUser.id}
			</if>
			<if test="conditionUser!=null">
				<if test="conditionUser.id!=null">AND id = #{conditionUser.id}</if>
				<if test="conditionUser.name!=null">AND name = #{conditionUser.name}</if>
				<if test="conditionUser.password!=null">AND password = #{conditionUser.password}</if>
				<if test="conditionUser.sex!=null">AND sex = #{conditionUser.sex}</if>
				<if test="conditionUser.createTime!=null">AND DATE(create_time) = DATE(#{conditionUser.createTime})</if>
				<if test="conditionUser.deleteFlag!=null">AND delete_flag = #{conditionUser.deleteFlag}</if>
				<if test="conditionUser.updateTime!=null">AND DATE(update_time) = DATE(#{conditionUser.updateTime})</if>
			</if>
		</where>
	</update>

	<update id="updateUserSetNullById">
		UPDATE user
		<set>
			<if test="name!=null">name = NULL,</if>
			<if test="password!=null">password = NULL,</if>
			<if test="sex!=null">sex = NULL,</if>
			<if test="createTime!=null">create_time = NULL,</if>
			<if test="deleteFlag!=null">delete_flag = NULL,</if>
			<if test="updateTime!=null">update_time = NULL</if>
		</set>
		WHERE id = #{id}
	</update>

	<select id="selectUserById" resultMap="resultUser">
		SELECT * FROM user WHERE id = #{id}
	</select>

	<select id="selectUserInId" resultMap="resultUser">
		SELECT * FROM user WHERE id IN 
			<foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>
	</select>

	<select id="selectOneUser" resultMap="resultUser">
		SELECT * FROM user
		<where>
			<if test="user!=null">
				<if test="user.id!=null">AND id = #{user.id}</if>
				<if test="user.name!=null">AND name = #{user.name}</if>
				<if test="user.password!=null">AND password = #{user.password}</if>
				<if test="user.sex!=null">AND sex = #{user.sex}</if>
				<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
				<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
				<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
			</if>
		</where>
		<if test="splicingSQL!=null">
			${splicingSQL}
		</if>
	</select>

	<select id="selectUser" resultMap="resultUser">
		SELECT * FROM User
		<where>
			<if test="user!=null">
				<if test="user.id!=null">AND id = #{user.id}</if>
				<if test="user.name!=null">AND name = #{user.name}</if>
				<if test="user.password!=null">AND password = #{user.password}</if>
				<if test="user.sex!=null">AND sex = #{user.sex}</if>
				<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
				<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
				<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
			</if>
		</where>
		<if test="splicingSQL!=null">
			${splicingSQL}
		</if>
		<if test="page!=null">
			limit #{page.start} , #{page.count}
		</if>
	</select>

	<select id="countUser" resultType="int">
		SELECT COUNT(*) FROM user
		<where>
			<if test="user!=null">
				<if test="user.id!=null">AND id = #{user.id}</if>
				<if test="user.name!=null">AND name = #{user.name}</if>
				<if test="user.password!=null">AND password = #{user.password}</if>
				<if test="user.sex!=null">AND sex = #{user.sex}</if>
				<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
				<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
				<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
			</if>
		</where>
	</select>

	<select id="findUserOneToManyReply" resultMap="resultUserOneToManyReply">
		SELECT 
			<include refid="sql_filed_user"/>,
			<include refid="sql_filed_reply"/>
			FROM user , reply
		<where>
			user.id = reply.user_id
			<if test="user!=null">
				<if test="user.id!=null">AND id = #{user.id}</if>
				<if test="user.name!=null">AND name = #{user.name}</if>
				<if test="user.password!=null">AND password = #{user.password}</if>
				<if test="user.sex!=null">AND sex = #{user.sex}</if>
				<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
				<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
				<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
			</if>
			<if test="reply!=null">
				<if test="reply.id!=null">AND id = #{reply.id}</if>
				<if test="reply.topicId!=null">AND topic_id = #{reply.topicId}</if>
				<if test="reply.userId!=null">AND user_id = #{reply.userId}</if>
				<if test="reply.data!=null">AND data = #{reply.data}</if>
				<if test="reply.createTime!=null">AND DATE(create_time) = DATE(#{reply.createTime})</if>
				<if test="reply.deleteFlag!=null">AND delete_flag = #{reply.deleteFlag}</if>
			</if>
		</where>
		<if test="splicingSQL!=null">
			${splicingSQL}
		</if>
		<if test="page!=null">
			limit #{page.start} , #{page.count}
		</if>
	</select>

	<select id="findUserOneToManyTopic" resultMap="resultUserOneToManyTopic">
		SELECT 
			<include refid="sql_filed_user"/>,
			<include refid="sql_filed_topic"/>
			FROM user , topic
		<where>
			user.id = topic.user_id
			<if test="user!=null">
				<if test="user.id!=null">AND id = #{user.id}</if>
				<if test="user.name!=null">AND name = #{user.name}</if>
				<if test="user.password!=null">AND password = #{user.password}</if>
				<if test="user.sex!=null">AND sex = #{user.sex}</if>
				<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
				<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
				<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
			</if>
			<if test="topic!=null">
				<if test="topic.id!=null">AND id = #{topic.id}</if>
				<if test="topic.title!=null">AND title = #{topic.title}</if>
				<if test="topic.data!=null">AND data = #{topic.data}</if>
				<if test="topic.userId!=null">AND user_id = #{topic.userId}</if>
				<if test="topic.createTime!=null">AND DATE(create_time) = DATE(#{topic.createTime})</if>
				<if test="topic.updateTime!=null">AND DATE(update_time) = DATE(#{topic.updateTime})</if>
				<if test="topic.deleteFlag!=null">AND delete_flag = #{topic.deleteFlag}</if>
				<if test="topic.maxCount!=null">AND max_count = #{topic.maxCount}</if>
			</if>
		</where>
		<if test="splicingSQL!=null">
			${splicingSQL}
		</if>
		<if test="page!=null">
			limit #{page.start} , #{page.count}
		</if>
	</select>

	<select id="queryUserOneToManyReply" resultMap="resultUserOneToManyReply">
		SELECT * FROM (
			SELECT 
				<include refid="sql_filed_user"/>
			FROM user
			<where>
				<if test="user!=null">
					<if test="user.id!=null">AND id = #{user.id}</if>
					<if test="user.name!=null">AND name = #{user.name}</if>
					<if test="user.password!=null">AND password = #{user.password}</if>
					<if test="user.sex!=null">AND sex = #{user.sex}</if>
					<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
					<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
					<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
				</if>
			</where>
			<if test="page!=null">
				limit #{page.start} , #{page.count}
			</if>
		) AS temp_user LEFT JOIN (
			SELECT 
				<include refid="sql_filed_reply"/>
			FROM reply
			<where>
				<if test="user!=null">
					<if test="user.id!=null">AND id = #{user.id}</if>
					<if test="user.topicId!=null">AND topic_id = #{user.topicId}</if>
					<if test="user.userId!=null">AND user_id = #{user.userId}</if>
					<if test="user.data!=null">AND data = #{user.data}</if>
					<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
					<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
				</if>
			</where>
			<if test="page1!=null">
				limit #{page1.start} , #{page1.count}
			</if>
		) AS temp_reply
		ON temp_user.user_temp_id = temp_reply.user_id
		<if test="splicingSQL!=null">
			${splicingSQL}
		</if>
	</select>

	<select id="queryUserOneToManyTopic" resultMap="resultUserOneToManyTopic">
		SELECT * FROM (
			SELECT 
				<include refid="sql_filed_user"/>
			FROM user
			<where>
				<if test="user!=null">
					<if test="user.id!=null">AND id = #{user.id}</if>
					<if test="user.name!=null">AND name = #{user.name}</if>
					<if test="user.password!=null">AND password = #{user.password}</if>
					<if test="user.sex!=null">AND sex = #{user.sex}</if>
					<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
					<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
					<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
				</if>
			</where>
			<if test="page!=null">
				limit #{page.start} , #{page.count}
			</if>
		) AS temp_user LEFT JOIN (
			SELECT 
				<include refid="sql_filed_topic"/>
			FROM topic
			<where>
				<if test="user!=null">
					<if test="user.id!=null">AND id = #{user.id}</if>
					<if test="user.title!=null">AND title = #{user.title}</if>
					<if test="user.data!=null">AND data = #{user.data}</if>
					<if test="user.userId!=null">AND user_id = #{user.userId}</if>
					<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
					<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
					<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
					<if test="user.maxCount!=null">AND max_count = #{user.maxCount}</if>
				</if>
			</where>
			<if test="page1!=null">
				limit #{page1.start} , #{page1.count}
			</if>
		) AS temp_topic
		ON temp_user.user_temp_id = temp_topic.user_id
		<if test="splicingSQL!=null">
			${splicingSQL}
		</if>
	</select>

	<select id="linkOneToManyReply" resultMap="resultReply">
		SELECT reply.* FROM user ,reply
		<where>
			user.id = reply.user_id
			<if test="user!=null">
				<if test="user.id!=null">AND id = #{user.id}</if>
				<if test="user.name!=null">AND name = #{user.name}</if>
				<if test="user.password!=null">AND password = #{user.password}</if>
				<if test="user.sex!=null">AND sex = #{user.sex}</if>
				<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
				<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
				<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
			</if>
			<if test="reply!=null">
				<if test="reply.id!=null">AND id = #{reply.id}</if>
				<if test="reply.topicId!=null">AND topic_id = #{reply.topicId}</if>
				<if test="reply.userId!=null">AND user_id = #{reply.userId}</if>
				<if test="reply.data!=null">AND data = #{reply.data}</if>
				<if test="reply.createTime!=null">AND DATE(create_time) = DATE(#{reply.createTime})</if>
				<if test="reply.deleteFlag!=null">AND delete_flag = #{reply.deleteFlag}</if>
			</if>
		</where>
		<if test="splicingSQL!=null">
			${splicingSQL}
		</if>
		<if test="page!=null">
			limit #{page.start} , #{page.count}
		</if>
	</select>

	<select id="linkOneToManyTopic" resultMap="resultTopic">
		SELECT topic.* FROM user ,topic
		<where>
			user.id = topic.user_id
			<if test="user!=null">
				<if test="user.id!=null">AND id = #{user.id}</if>
				<if test="user.name!=null">AND name = #{user.name}</if>
				<if test="user.password!=null">AND password = #{user.password}</if>
				<if test="user.sex!=null">AND sex = #{user.sex}</if>
				<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
				<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
				<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
			</if>
			<if test="topic!=null">
				<if test="topic.id!=null">AND id = #{topic.id}</if>
				<if test="topic.title!=null">AND title = #{topic.title}</if>
				<if test="topic.data!=null">AND data = #{topic.data}</if>
				<if test="topic.userId!=null">AND user_id = #{topic.userId}</if>
				<if test="topic.createTime!=null">AND DATE(create_time) = DATE(#{topic.createTime})</if>
				<if test="topic.updateTime!=null">AND DATE(update_time) = DATE(#{topic.updateTime})</if>
				<if test="topic.deleteFlag!=null">AND delete_flag = #{topic.deleteFlag}</if>
				<if test="topic.maxCount!=null">AND max_count = #{topic.maxCount}</if>
			</if>
		</where>
		<if test="splicingSQL!=null">
			${splicingSQL}
		</if>
		<if test="page!=null">
			limit #{page.start} , #{page.count}
		</if>
	</select>

	<select id="countOneToManyUserOneToManyReply" resultType="int">
		SELECT COUNT(DISTINCT temp_user.id) FROM (
			SELECT user.id FROM user
			<where>
				<if test="user!=null">
					<if test="user.id!=null">AND id = #{user.id}</if>
					<if test="user.name!=null">AND name = #{user.name}</if>
					<if test="user.password!=null">AND password = #{user.password}</if>
					<if test="user.sex!=null">AND sex = #{user.sex}</if>
					<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
					<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
					<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
				</if>
			</where>
			<if test="page!=null">
				limit #{page.start} , #{page.count}
			</if>
		) AS temp_user LEFT JOIN (
			SELECT reply.user_id FROM reply
			<where>
				<if test="user!=null">
					<if test="user.id!=null">AND id = #{user.id}</if>
					<if test="user.topicId!=null">AND topic_id = #{user.topicId}</if>
					<if test="user.userId!=null">AND user_id = #{user.userId}</if>
					<if test="user.data!=null">AND data = #{user.data}</if>
					<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
					<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
				</if>
			</where>
			<if test="page1!=null">
				limit #{page1.start} , #{page1.count}
			</if>
		) AS temp_reply
		ON temp_user.id = temp_reply.user_id
	</select>

	<select id="countOneToManyUserOneToManyTopic" resultType="int">
		SELECT COUNT(DISTINCT temp_user.id) FROM (
			SELECT user.id FROM user
			<where>
				<if test="user!=null">
					<if test="user.id!=null">AND id = #{user.id}</if>
					<if test="user.name!=null">AND name = #{user.name}</if>
					<if test="user.password!=null">AND password = #{user.password}</if>
					<if test="user.sex!=null">AND sex = #{user.sex}</if>
					<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
					<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
					<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
				</if>
			</where>
			<if test="page!=null">
				limit #{page.start} , #{page.count}
			</if>
		) AS temp_user LEFT JOIN (
			SELECT topic.user_id FROM topic
			<where>
				<if test="user!=null">
					<if test="user.id!=null">AND id = #{user.id}</if>
					<if test="user.title!=null">AND title = #{user.title}</if>
					<if test="user.data!=null">AND data = #{user.data}</if>
					<if test="user.userId!=null">AND user_id = #{user.userId}</if>
					<if test="user.createTime!=null">AND DATE(create_time) = DATE(#{user.createTime})</if>
					<if test="user.updateTime!=null">AND DATE(update_time) = DATE(#{user.updateTime})</if>
					<if test="user.deleteFlag!=null">AND delete_flag = #{user.deleteFlag}</if>
					<if test="user.maxCount!=null">AND max_count = #{user.maxCount}</if>
				</if>
			</where>
			<if test="page1!=null">
				limit #{page1.start} , #{page1.count}
			</if>
		) AS temp_topic
		ON temp_user.id = temp_topic.user_id
	</select>

</mapper>
